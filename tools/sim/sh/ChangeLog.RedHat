2003-08-08  Michael Snyder  <msnyder@redhat.com>

	* gencode.c (setdmx, setdmy): Fix bit pattern (errata).
	(ldc <REG_N>, SGR): Add new insn.
	(ldc @<REG_N>+, SGR): Add new insn.
	(ldrc): Fix bit pattern (errata).

2003-08-07  Michael Snyder  <msnyder@redhat.com>

	* interp.c (get_loop_bounds_ext): New function.
	(sim_resume): Call extended version of get_loop_bounds,
	if bit zero of RE is set (LDRC vs. SETRC instruction).
	* gencode.c (ldrc): Call get_loop_bounds_ext, and
	CHECK_INSN_PTR (interface to sim_resume for repeat loop).

2003-07-24  Michael Snyder  <msnyder@redhat.com>

	Expand ppi_table from 256 bytes to 4096 bytes (2^12).
	* gencode.c (pmuls): Doesn't use x and y, substitute zeroes.
	(pcmp): Specify z even though it is unused; expand_ppi_code
	needs it as a termination marker.
	(pabs, prnd): Need both old and new forms.
	(pswap): Specify the 01 explicitly.
	(expand_ppi_code): Rewrite for 12-bit table.
	(ppi_gensim): Switch statement uses 12 bits instead of 8.
	(main): Generate 12 bit ppi_table instead of 8.

2003-07-23  Michael Snyder  <msnyder@redhat.com>

	* interp.c: Redact/Sanitize fix-up.

2003-07-10  Michael Snyder  <msnyder@redhat.com>

	* gencode.c: FIXME fixup round.
	(ldtlb): No-op, not abort.
	(ocbi, ocbp, psub, pabs, prnd): Clean up.
	(expand_ppi_code): Add switch case 'y'.

2003-07-09  Michael Snyder  <msnyder@redhat.com>

	* gencode.c (ppi_gensim): For a conditional ppi insn, if the
	condition is false, we want to return (not break).  A break
	will take us to the end of the function where registers will
	be updated, whereas the desired outcome is for nothing to change.

2003-07-09  Michael Snyder  <msnyder@redhat.com>

	* gencode.c (pmuls): Expression is mis-parenthesized.

2003-07-09  Michael Snyder  <msnyder@redhat.com>

	* gencode.c (prnd): Clear LSW of result to zeros.

2003-07-08  Michael Snyder  <msnyder@redhat.com>

	* gencode.c (movua.l): Update bit pattern according to new docs.

2003-07-07  Michael Snyder  <msnyder@redhat.com>

	* gencode.c (pswap): Compute res_grd.

	* gencode.c (op movsxy_tab): Add movx.l and movy.l opcodes.
	Change movx.w patterns to end in "??", to disambiguate them
	from new movx.l / movy.l patterns.
	(expand_opcode): Do "nopy" expansion on detecting "??", 
	rather than xx or xy.
	(gensim_caselist): Add case for '?'.

2003-07-03  Michael Snyder  <msnyder@redhat.com>

	* gencode.c (expand_opcode): Extend xy and yx to include 
	the superset of the old (nopx, nopy) instructions.
	(gensim_caselist): Ditto.
	(movsxy_tab): Rearrange and extend the new encodings
	of movx.w and movy.w to subsume the old ones, as well as 
	covering all of the new ones.

2003-07-02  Michael Snyder  <msnyder@redhat.com>

	* gencode.c (expand_opcode): Add handling for xy, XY, yx, YX, 
	ax, and AY.
	(gensim_caselist):  Ditto.
	(movsxy_tab): Use the above to define some new movx/movy insns.
	(gensim): Generate some #defines for use in the above.

	* interp.c (saved_state): Move new registers to the end
	(strange order-dependencies pertain).
	(init_dsp): Recognize sh4a, sh4al-dsp.

2003-06-27  Michael Snyder  <msnyder@redhat.com>

	* gencode.c (ldrc): Set bit one of RE, don't touch loop bounds.
	(ocbi, ocbp): Catch memory faults by doing a memory read.
	(movs.w): Fix typo in name string.
	(movx.w, movy.w): Fix bit patterns.
	(gensim_caselist): The movy instructions use registers R6 and R7 
	(not R4 and R5 like the movx instructions).
	

2003-06-25  Michael Snyder  <msnyder@redhat.com>

	* interp.c (saved_state_type): 
	Add DBR and SGR registers, plus LDST flag.
	* gencode.c (op tab): Implement ldc/stc on dbr and sgr regs.
	Implement movca.
	* gencode.c (movli, movco): Add.

2003-06-24  Michael Snyder  <msnyder@redhat.com>

	* gencode.c (movua): Add.
	* gencode.c (expand_ppi_code): Add default case, handle 'g'.

2003-06-23  Michael Snyder  <msnyder@redhat.com>

	* gencode.c (ocbi, ocbp): Treat as no-op.
	(setdmx, setdmy): Fix bit patterns.
	(ldrc): Implement.
	(pabs, prnd, psub): Add "if cc".
	(pclr/pmul parallel): Implement.
	(pswap): Fiddle with status flags computation.

2003-06-20  Michael Snyder  <msnyder@redhat.com>

	* gencode.c (fipr): Implement.

2003-06-19  Michael Snyder  <msnyder@redhat.com>

	* gencode.c (expand_opcode): Add 'v' encoding for vector register.
	(gensim_caselist): Ditto.
	(fipr): Use new 'v' encoding for vector register.
	(fsca): Implement.
	(ftrv): Add dummy implementation, using new 'v' encoding.

2003-06-13  Michael Snyder  <msnyder@redhat.com>

	* gencode.c (expand_opcode): Add 'd' code for double-register.
	(gensim_caselist): Add 'd' code, and a default case!
	Otherwise it can loop forever!
	(fsca): Remove ifdef, use new 'd' code for double-register.
	(frchg): Legal only in single precision mode; else SIGILL.

2003-06-12  Michael Snyder  <msnyder@redhat.com>

	* gencode.c (fsrra): Implement.

2003-06-11  Michael Snyder  <msnyder@redhat.com>

	* gencode.c (fpchg): Implement, fix bit pattern.

2003-06-04  Michael Snyder  <msnyder@redhat.com>

	* gencode.c (op tab): Add setdmx, setdmy, clrdmxy.
	(op ppi_tab): Add pswap.

	* gencode.c (op tab): Add place-holders for fchg, fpchg, 
	fsca, fsrra, ftrv, icbi, prefi, synco.

Local Variables:
mode: change-log
left-margin: 8
fill-column: 74
version-control: never
change-log-default-name: "ChangeLog.RedHat"
End:
