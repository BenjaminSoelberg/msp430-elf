2006-03-01  DJ Delorie  <dj@redhat.com>

	* mem.c (mem_put_byte): New I/O interface.
	(mem_put_qi): Likewise.
	(mem_get_byte): Fix debug printfs.
	* opc2c.c (main): Be more picky about comment scanning.
	* r8c.opc (shift_op): Shift count is truncated after 16.
	(bmcnd_cond_map): New.
	(BMcnd): Use it.
	* reg.c (condition_true): Mask the bottom 4 bits.

2005-08-19  DJ Delorie  <dj@redhat.com>

	* mem.c (mem_put_byte): Move syscall ABI to 0x400, add console and
	trace ports.

2005-08-12  DJ Delorie  <dj@redhat.com>

	* load.c (m32c_load): Disable initial detection of heap space.

2005-06-28  DJ Delorie  <dj@redhat.com>

	* cpu.h: Prototype enable_counting
	* reg.c (enable_counting): New.
	* load.h (default_machine): Prototype.
	* load.c (default_machine): New.
	(m32c_load): Allow for srec bfds.  Fix heaptop logic.  Detect
	location of reset vector, use it for srecs.

	* m32c.opc (getbyte): Use mem_get_pc.
	(BMcmd dest): Fix immediate size.
	(jmp.b): Detect jmp-to-self as "exit".
	* r8c.opc (getbyte): Use mem_get_pc.
	(jmp.b): Detect jmp-to-self as "exit".

	* main.c (disassemble, cycles): new.
	(done): New.
	(main): Add -d (disassemble) and -m (machine) options.
	Trace disassembly, count cycles, call done() as appropriate.
	* trace.h: New.
	* trace.c (sim_trace_one): Allow for srec bfds.

	* mem.c (mem_counters): New.
	(init_mem): Clear it.
	(mcs): New.
	(mem_usage_stats): Show access stats too.
	(mem_put_byte): New.
	(mem_put_qi, mem_put_hi, mem_put_psi, mem_put_si, mem_put_blk):
	Call it.  Note stats.
	(mem_get_byte): New.
	(mem_get_qi, mem_get_hi, mem_get_psi, mem_get_si, mem_get_blk):
	Call it.  Note stats.

	* misc.h (comma): Prototype.
	* misc.c (comma): New.
	
2005-06-15  DJ Delorie  <dj@redhat.com>

	* trace.c: New file.
	* Makefile.in (SIM_OBJS): Add trace.o.
	* m32c.opc (decode_m32c): Minor formatting change.
	* r8c.opc (decode_r8c): Likewise.
	* main.c (main): Initialize and call trace.  Call usage stats on
	exit.
	* mem.c (used): New
	(mem_usage_stats): Print memory usage statistics.
	* cpu.h (heaptop, heapbottom): New.
	* load.c (m32c_load): Determine initial heap top.
	* reg.c (heaptop, heapbottom, highest_sp, lowest_sp): Define.
	(stack_heap_stats): New.
	(put_reg): Check for collision.  Note highest and lowest stack
	settings.
	* syscalls.c (m32c_syscall): Use host flags, not target flags, in
	open().  Don't close stdin/stdout/stderr in close().  Add call to
	indicate new heap top.
	
2005-06-14  DJ Delorie  <dj@redhat.com>

	* int.c (trigger_fixed_interrupt): Save data to new stack slot,
	not old one.

2005-05-25  Jim Blandy  <jimb@redhat.com>

	* gdb-if.c (sim_do_command): Add 'trace' and 'verbose' commands.

2005-05-03  Jim Blandy  <jimb@redhat.com>

	* syscalls.c (m32c_syscall): Use the callback structure to make
	system calls, if provided.

2005-04-26  DJ Delorie  <dj@redhat.com>

	* m32c.opc (CMP): sign extend the right number of bits.

	* r8c.opc (ADD): Sign extend imm4 constants.
	(NOT): Don't invert twice.

2005-04-25  DJ Delorie  <dj@redhat.com>

	* r8c.opc (decode_r8c): mov.size:s #imm,dest has reversed B/W bit.

2005-04-13  Jim Blandy  <jimb@redhat.com>

	Report signals to the supervisory code ('run' or GDB), rather than
	simply exiting the entire process.
	* cpu.h (exit_code): Delete declaration.
	(step_result): New declaration.
	(M32C_MAKE_STOPPED, M32C_STOPPED, M32C_STOP_SIG): New macros.
	(M32C_MAKE_EXITED, M32C_EXITED, M32C_EXIT_STATUS): Adjusted for new
	return code representation.
	* reg.c (exit_code): Delete definition.
	(step_result): New definition.
	* syscalls.c (m32c_syscall): Report both signals and exits via
	step_result, instead of just setting exit_code.
	* gdb-if.c: #include <signal.h>.
	(m32c_signal_to_host): New function.
	(handle_step): Report signals.
	(sim_resume): If asked to deliver a signal, print a warning, but do
	the step, instead of returning without stepping.
	* m32c.opc (decode_m32c): Initialize step_result to
	M32C_MAKE_STEPPED (), and then return it, rather than clearing and
	checking exit_code.
	* r8c.opc (decode_r8c): Same.

	Pass exit codes through to the supervisory code ('run' or GDB),
	rather than simply exiting the entire process.
	* cpu.h (exit_code): Declare new external variable.
	(M32C_MAKE_STEPPED, M32C_MAKE_HIT_BREAK, M32C_MAKE_EXITED)
	(M32C_STEPPED, M32C_HIT_BREAK, M32C_EXITED, M32C_EXIT_STATUS): New
	macros.
	* reg.c (exit_code): Define.
	* r8c.opc (decode_r8c): Clear exit_code at the beginning of each
	instruction.  Use the M32C_MAKE_foo macros to construct an
	appropriate return value.
	* m32c.opc (decode_m32c): Same.
	* main.c (main): Handle return values from decode_opcode
	appropriately.
	* gdb-if.c: #include <assert.h>.
	(handle_step): New function.
	(sim_resume): Use it to process return values from decode_opcode.

	* gdb-if.c (check_desc): Fix error message.
	
2005-04-07  DJ Delorie  <dj@redhat.com>

	* srcdest.c (decode_srcdest4): Mask computed addresses to
	addr_mask.

2005-03-31  DJ Delorie  <dj@redhat.com>

	* r8c.opc (div_op): Define "undefined results" as "what the gcc
	testsuite expects" :-P
	* m32c.opc (div_op): Likewise.

2005-03-30  DJ Delorie  <dj@redhat.com>

	* srcdest.c (decode_sd23): Handle PSImode properly.

	* reg.c (b2minsigned): Fix 8 bit minimum.

2005-03-28  Jim Blandy  <jimb@redhat.com>

	* r8c.opc (decode_r8c): Tighten encoding of MOVA to distinguish it
	from PUSHC.
 
	* srcdest.c (decode_cr): Add entries for other registers.

2005-03-16  DJ Delorie  <dj@redhat.com>

	* m32c.opc (getbyte): Defer opcode fetches to "-t -t".
	(decode_m32c): Blank line between opcodes.
	(BRK): Print message for verbose.
	* r8c.opc: Likewise.
	* main.c (main): Default exit value is 1, so fast abort() works.
	* reg.c (get_reg): Defer pc/fb/sp reads to "-t -t".
	(put_reg): Defer pc writes to "-t -t".
	* srcdest.c (disp8, disp16, disp24): Defer disp fetches to "-t -t".
	* syscalls.c (m32c_syscall): Add SYS_kill.
	
2005-03-14  DJ Delorie  <dj@redhat.com>

	* m32c.opc (CMP): swap operands.
	(STC): 4 bytes, not 3.
	* main.c (main): Move prog decl to beginning.
	* syscalls.c (arg): Remove debug printf.
	(m32c_syscall): Flush stdout before writing to it.

2005-03-09  DJ Delorie  <dj@redhat.com>

	* r8c.opc (decode_r8c): Fix push/pop logic.
	* srcdest.c (decode_jumpdest): Fix name table.

	* cpu.h (CPU_*): New.
	(m32c_cpu, m32c_set_cpu): New.
	(A16, A24): New.
	* int.c (trigger_fixed_interrupt): Use them.
	* load.c (m32c_set_mach): call m32c_set_cpu.
	* m32c.opc (FSET): Fix bit.
	(STC): Fix logic.
	* mem.c (mem_put_qi): Use m32c_syscall.
	* reg.c (m32c_cpu, m32c_set_cpu): New.
	(condition_true): Use A16.
	(set_flags): Use A16.
	* srcdest.c (widen_sd): Use A16.
	* syscalls.h: Rename syscall to m32c_syscall.
	* syscalls.c: Add many syscalls.
	
2005-03-09  Jim Blandy  <jimb@redhat.com>

	Move code to set sim architecture from a BFD 'mach' value into its
	own function.
	* load.c (m32c_set_mach): New function.
	(m32c_load): Call m32c_set_mach, instead of writing it out inline.
	* load.h (m32c_set_mach): New prototype.
	* gdb-if.c (sim_open): If we're given a BFD, set the simulator's
	architecture from it.

	* gdb-if.c (sim_resume): Call decode_opcode (i.e., the instruction
	stepper for the current architecture), instead of decode_r8c.

	* m32c.opc (decode_m32c): When we hit a breakpoint instruction,
	leave the PC pointing at the breakpoint instruction, not after it.
	This is what GDB wants to see.

2005-03-08  Jim Blandy  <jimb@redhat.com>

	* r8c.opc (decode_r8c): Correct bit / register correspondence for
	PUSHM.
	
	* m32c.opc (decode_m32c): Partially revert previous change; POPM
	was right before.
	
	* m32c.opc (decode_m32c): Correct bit / register correspondence
	for PUSHM and POPM.

2005-03-02  DJ Delorie  <dj@redhat.com>

	* opc2c.c (next_varybits): Extract vary exclusion code to ...
	(valid_varybits): Here.
	(store_opcode_bits): Test for valid varies at the top of the loop.
	* r8c.opc: Add vary for 3 bit dst operand.
	* srcdest.c (decode_srcdest4): fb offsets are signed.
	(decode_jumpdest): Likewise.
	(decode_sd23): Likewise.

2005-03-01  DJ Delorie  <dj@redhat.com>

	* m32c.opc (decode_m32c): Add m32cm support

2005-02-28  DJ Delorie  <dj@redhat.com>

	* cpu.h (decode_cr_b): New, with defines.
	(decode_src3, get_bit2, put_bit2): New.
	* int.c (trigger_fixed_interrupt): Adjust for address size.
	* m32c.opc: Add remaining opcodes and support macros.
	* mem.c (s): Adjust for address size.
	(mem_put_qi, mem_get_qi): Use S/E.
	(mem_get_hi): Ensure printfs happen in the right order.
	(mem_get_psi): Likewise.
	(mem_get_si): Likewise.
	* opc2c.c: Add support for VARY instruction.  Support it
	throughout.
	* r8c.opc: Minor tweaks and adjustments.
	* reg.c (condition_true): Support m32c.
	(set_flags): Support m32c.
	* srcdest.c (decode_indirect, decode_index): Add trace.
	(decode_src3): New.
	(decode_cr): Fix byte count.
	(decode_cr_b): New.
	(widen_sd): Support m32c.
	(get_bit2, put_bit2): New.

2005-02-23  DJ Delorie  <dj@redhat.com>

	* Makefile.in: Add m32c.o.  Pass CPUFLAGS to target file compiles.
	* cpu.h (b2mask, b2signbit, b2maxsigned, b2minsigned): New.
	(set_pointer_width): New.
	(set_oszc, set_szc, set_osz, set_sz): Width is bytes, not B/W flag.
	(decode_indirect, decode_index): New.
	(decode_dest23, decode_src23, decode_dest2): New.
	(decode_opcode, decode_m32c): New.
	* load.c (m32c_load): Select decoder and set pointer width based
	on bfd_mach.
	* main.c (main): Call selected decoder.
	* mem.c: Group multi-byte accesses on same debug line.
	(sign_ext): Handle 32 bit requests properly.
	* opc2c.c: Rewrite to be byte-length agnostic.  Support arbitrary
	indirections.
	* r8c.opc: Adjust all flag set_*() callers.
	(MATH_OP): Use width in dc.  Adjust all callers.
	* reg.c (b2mask, b2signbit, b2maxsigned, b2minsigned): New.
	(oldregs): Move to top.
	(init_regs): Initialize oldregs too.
	(set_pointer_width): New, adjust register sizes.
	(put_reg): Add missing break.
	(set_oszc, set_szc, set_osz, set_sz): Width is bytes, not B/W flag.
	(trace_register_changes): Shorten bank indicators.
	* srcdest.c (src_indirect, dest_indirect, src_addend, dest_addend): New.
	(disp16): Use wide mem accesses.
	(disp24): New.
	(disp20): Base on disp24().
	(decode_indirect, decode_index, modes23, decode_sd23,
	decode_dest23, decode_src23, decode_dest2): New.
	* m32c.opc: New.
	
2005-02-21  Jim Blandy  <jimb@redhat.com>

	* gdb-if.c (sim_store_register): Replace one last reference to
	reg_bytes with a reference to the value returned by our reg_size
	function.

	* r8c.opc (decode_r8c): For the BRK instruction, leave the PC
	pointing at the breakpoint instruction.

	* gdb-if.c (sim_fetch_register): Don't forget to replace a
	reference to reg_bytes with a reference to the value returned by
	our reg_size function.

	* gdb-if.c: Renamed from gdb.c, to avoid confusion with GDB's own
	gdb.c.
	* Makefile.in (SIM_OBJS): Update.
	(gdb-if.o): Rename target from gdb.o.

	* gdb.c (open_objfile): New function.
	(sim_load): Use it to open the executable file, if the caller
	hasn't passed in a BFD already.

	* gdb.c (sim_create_inferior): Only load if the caller has
	actually provided a BFD.

	* gdb.c: #include "gdb/sim-m32c.h".
	(check_regno, sim_fetch_register, sim_store_register): Use
	register numbers from there, which allow GDB to access both banks
	of registers.
	(mask_size, reg_size): New functions.

	* gdb.c (sim_resume): Don't give our argument a name that masks
	the static global variable 'siggnal'.

2005-02-16  Jim Blandy  <jimb@redhat.com>

	Add GDB glue.

	* gdb.c: New file, containing the GDB / sim interface functions.
	* Makefile.in (gdb.o): New target.
	(SIM_OBJS): Add gdb.o.
	
	* Makefile.in (SIM_RUN_OBJS): Move most objfiles from here to ...
	(SIM_OBJS): New variable.

	* main.c (main): Correct name of architecture in error message.
	
	* main.c (main): Move loading code to its own file, and #include
	"load.h".
	* load.c, load.h: New files.
	* Makefile.in (load.o): New target.
	(main.o): Update dependencies.

	* main.c (verbose, trace, regs, addr_mask, membus_mask): Move
	these variables from here ...
	* reg.c: ... to here, so they can be present in both 'run' and
	'libsim.a'.
	
	* r8c.opc (decode_r8c): Return zero if the instruction executed
	normally.  If we hit a 'brk' instruction, return one, instead of
	exiting the entire process.
	* cpu.h (decode_r8c): Update prototype.
	* main.c (main): If decode_r8c returns non-zero, do the exit here.

	* mem.c (L1_BITS, L2_BITS, OFF_BITS, L1_LEN, L2_LEN, OFF_LEN): New
	macros.
	(pt, mem_ptr): Use them.
	
	* mem.c (init_mem): New function.
	* mem.h (init_mem): Add prototype.
	* reg.c (init_regs): New function.
	#include <string.h>, since we now use 'memset'.
	* cpu.h (init_regs): Add prototype.

	* reg.c (get_reg_ll, put_reg_ll): Handle all registers, by
	deferring to get_reg and put_reg for everything but the 64-bit
	registers.

	* syscalls.c: #include gdb/callback.h.
	(callbacks): New variable.
	(set_callbacks): New function.
	* syscalls.h (struct host_callback_struct): New forward decl.
	(set_callbacks): New prototype.

	* cpu.h (num_regs): New, final member of register enum.

	* reg.c (put_reg): Make the 'val' argument an unsigned int, to
	match the return value of get_reg.
	* cpu.h (put_reg): Update prototype.

	* r8c.opc: Tell Emacs to treat this file as C code.

2005-02-16  DJ Delorie  <dj@redhat.com>

	* r8c.opc (decode_r8c): Add the two m16c opcodes.

2005-02-15  Jim Blandy  <jimb@redhat.com>

	* New simulator for the Renesas m32c, by DJ Delorie.
