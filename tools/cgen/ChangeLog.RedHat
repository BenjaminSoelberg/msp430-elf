2010-10-22  Nick Clifton  <nickc@redhat.com>

	* cpu/xstormy16.cpu (movfgrgriipostinc): Propogate change in
	source register into base register.
	(movfgrgriipredec, movfgriipostincgr, movfgriipredecgr):
	Likewise.

2010-09-16  Nick Clifton  <nickc@redhat.com>

	* Import from sanyo-09r1 branch:

	2010-08-16  DJ Delorie  <dj@redhat.com>

	* cgen-sid.scm: Load guild.scm.

	* cpu/xstormy16.cpu (alignfix-mem-far): New.
	(set-alignfix-mem-far): New.
	(movfgrgri, movfgrgripostinc, movfgrgripredec, movfgrigr,
	movfgripostincgr, movfgripredecgr, movfgrgrii, movfgrgriipostinc,
	movfgrgriipredec): Use them.

2007-09-21  Dave Brolley  <brolley@redhat.com>

	* intrinsics.scm (md-operand:predicate): Now takes second argument:
	'lvalue?'. Generate "nonimmediate_operand" if lvalue? is true.
	(md-operand:to-string): Pass lvalue? to md-operand:predicate.
	(enum-type): New function.
	(write-cgen-insn): Generate type and reference_p for each operand.
	(intrinsics.h): Generate noe cgen_regnum_operand_type enumeration.
	Generate new fields of cgen_regnum_operand: type and reference_p.
	(runtime-type): Do not generate "&" if the operand's CDATA is
	REGNUM.

2007-08-21  Dave Brolley  <brolley@redhat.com>

	* intrinsics.scm (md-operand:predicate): Change the default result to
	"general_operand".
	(intrinsics.h): Generate #ifndef __MEP__ around
	the enumeration of well-known intrinsics.

2007-06-01  Dave Brolley  <brolley@redhat.com>

	* cgen-intrinsics.scm (load-files): Load guile.scm.

2006-06-20  Dave Brolley  <brolley@redhat.com>

	* cpu/sh.cpu (SH2a-nofpu-MACH): Add sh5.
	(SH2a-MACH): Add sh5.
	(sh2a-nofpu-models): Add units for sh5.
	(sh2a-fpu-models): Likewise.

2005-06-17  Dave Brolley  <brolley@redhat.com>

	Once again restore this patch which has now been contributed.
	2001-06-05  graydon hoare  <graydon@redhat.com>
	* utils.scm (foldl): Define.
	(foldr): Define.
	(filter): Define.
	(union): Define.
	(intersection): Simplify.
	* sid.scm : Set APPLICATION to SID-SIMULATOR.
	(-op-gen-delayed-set-maybe-trace): Define.
	(<operand> 'gen-set-{quiet,trace}): Delegate to
	op-gen-delayed-set-quiet etc. Note: this is still a little tangled
	up and needs cleaning.
	(-with-parallel?): Hardwire with-parallel to #t.
	(<operand> 'cxmake-get): Replace with lookahead-aware code
	* sid-decode.scm: Remove per-insn writeback fns.
	(-gen-idesc-decls): Redefine sem_fn type.
	* sid-cpu.scm (gen-write-stack-structure): Replace parexec stuff
	with write stack stuff.
	(cgen-write.cxx): Replace per-insn writebacks with single write
	stack writeback. Add write stack reset function.
	(-gen-scache-semantic-fn insn): Replace parexec stuff with write
	stack stuff.
	* rtl-c.scm (xop): Clone operand into delayed operand if #:delayed
	estate attribute set.
	(delay): Set #:delayed attribute to calculated delay, update
	maximum delay of cpu, check (delay ...) usage.
	* operand.scm (<operand>): Add delayed slot to <operand>.
	* mach.scm (<cpu>): Add max-delay slot to <cpu>.
	* dev.scm (load-sid): Set APPLICATION to SID-SIMULATOR.
	* doc/rtl.texi (Expressions): Add section on (delay ...).

2006-06-15  Dave Brolley  <brolley@redhat.com>

	* cpu/sh-sim.cpu: New file.
	* cpu/sh-sid.cpu: New file.
	* cpu/sh64-media.cpu (dshci): Add xtiming argument and splice it in.
	(All fields): Remap for (insn-lsb0? #f)
	(All insns): Add timing specs.
	* cpu/sh64-compact.cpu (dshcf,dshcop): Replace 'ignored' argument with
	'xattrs' and .splice it in.
	(32-BIT-INSN,SH4-GROUP,SH4A-GROUP): New insn attributes.
	(h-frc,h-drc): Add PROFILE attribute.
	(h-fpccr): Removed.
	(h-vbr): New hardware.
	(All fields): Remap for (insn-lsb0? #f)
	(f-imm20-hi,f-imm20-lo,f-imm20): New fields.
	(fr0,fmovm,fmovn,imm20,imm12x4,imm12x8,vbr): New operands.
	(fpscr): Use h-fpscr.
	(fsdm,fsdn): Use h-fsd.
	(dshci): Add xtiming argument and splice it in.
	(dr,xd): pmacros removed.
	(All insns): Add timing specs, *-MACH attribibutes,
	SH4{A}-GROUP attributes.
	(divu,mulr,ldc-vbr,ldc-sr,ldcl-vbr,movl12,movl13,stcl-vbr): New insns.
	* cpu/sh.cpu): Include sh-sid.cpu or sh-sim.cpu depending on whether
	we're being processed for sim or sid.
	(define-arch): Change insn-lsb0? for #f. Add machs sh2e, sh2a-fpu,
	sh2a-nofpu, sh4-nofpu, sh4a-nofpu, sh4a, sh4al.
	(define-isa compact): Add (isa-parallel-insns 2).
	(define-isa media): Add (isa-parallel-insns 2). Add
	(default-insn-word-bitsize 32). Change base-insn-bitsize to 32.
	(define-mach): Add sh2e, sh2a-fpu, sh2a-nofpu, sh4-nofpu, sh4a-nofpu,
	sh4a, sh4al
	(SH2-MACH, SH2e-MACH, SH2a-nofpu-MACH, SH2a-MACH, SH3-MACH) 
	(SH3e-MACH, SH4-nofpu-MACH, SH4-MACH, SH4a-nofpu-MACH, SH4a-MACH) 
	(SH4al-MACH, SH5-MACH): New pmacros.
	(common-units, common-fp-units, sh2a-nofpu-units, sh2a-fpu-units) 
	(sh4-nofpu-units, sh4-common-fp-units, sh5-media-units) 
	(sh5-media-fp-units, common-model, common-model-with-fp) 
	(sh3-model, sh3e-model): New pmacros.
	(define-model sh2): New model.
	(define-model sh2e): New model.
	(define-model sh3): New model.
	(define-model sh3e): New model.
	(define-model sh2a-nofpu): New model.
	(define-model sh2a-fpu): New model.
	(define-model sh4-nofpu): New model.
	(define-model sh4): New model.
	(define-model sh4a-nofpu): New model.
	(define-model sh4a): New model.
	(define-model sh4al): New model.
	(define-model sh5-media): New model.
	(define-model sh5): Add all units.
	(all-models, sh2e-models, sh2a-nofpu-models, sh2a-fpu-models) 
	(sh3-models, sh3e-models, sh4-nofpu-models, sh4-models) 
	(sh5-media-models, shad-models, fsqrt-models): New pmacros.
	(h-pc): Add PROFILE attribute.
	(h-fr): Likewise.
	(h-tr): Likewise.
	(h-gr,h-grc): Likewise.
	(h-cr): Set h-sr in setter.
	(h-frbit): Get/Set h-fpscr.
	(h-szbit,h-prbit): Likewise.
	(h-fp): Add PROFILE attribute. Now indexed by even indices 0-62.
	Add getter and setter.
	(h-fc): Add PROFILE attribute. Now indexed by quad indices 0-60.
	Adjust getter and setter.
	(h-fmtx): Add PROFILE attribute. Now indexed by 0, 16, 32 and 48.
	Adjust getter and setter.
	(h-dr): Add PROFILE attribute. Now indexed by even indices 0-62.
	(h-fsd,h-fmov): New hardware.

2005-04-29  Richard Sandiford  <rsandifo@redhat.com>

	* intrinsics.scm (is-h-fpr?, is-h-fpr-int?): Delete.
	(target:guess-mode): Use the CDATA attribute to check for FMAX
	operands.

2005-04-28  Richard Sandiford  <rsandifo@redhat.com>

	* intrinsics.scm (or-predicates): Delete.
	(is-h-fpr?, is-h-fpr-int?, is-h-cr?, is-h-ccr?): Adjust for changes
	in the FMAX register names.

2005-04-21  Richard Sandiford  <rsandifo@redhat.com>

	* intrinsics.scm (target:add-well-known-intrinsics): Pass a variable
	number of arguments to well-known-intrinsic.  Remove #f rtl-codes.
	Add a "TARGET_FMAX" condition to the FMAX intrinsics.
	(gcc-hook): Add a "condition" field.
	(well-known-intrinsic): Take a variable number of arguments.
	Assume that the "rtl-code" and "condition" fields of gcc-hook
	are #f if no values are specified.
	(write-insn): If the instruction's gcc-hook specifies a condition,
	add it to the md pattern.

2005-04-08  Richard Sandiford  <rsandifo@redhat.com>

	* intrinsics.scm (or-predicates): New function.
	(is-h-fpr?, is-h-fpr-int?): New predicates.
	(is-h-cr?): Return true if is-h-fpr?.
	(is-h-ccr?): Return true for h-fmax-ccr*.
	(target:guess-mode): Choose SImode for integer values in FPRs and
	SFmode for float values in FPRs.
	(target:reg-constraint): Use "em" for 4-bit coprocessor register
	fields and "x" for 5-bit fields.
	(target:add-well-known-intrinsics): Add fmovs, fadds, fsubs, fmuls,
	fdivs, fsqrts, fabss, fnegs, fcvtws, fcvtsw, fcmpus, fcmpues, fcmpuls,
	fcmpules, fcmpes, fcmplis and fcmpleis.
	(add-md-insn): Make sure all SEM-ONLY fixed registers are marked as
	inputs or outputs as appropriate.

2005-04-05  Richard Sandiford  <rsandifo@redhat.com>

	* intrinsics.scm (convert-isa): New function.
	(target:frob-isa-name): Return a string rather than a symbol.
	(target:for-each-isa!): Pass the ISA as a string, not a symbol.
	(-slot-attribute): Convert the ISA name to a string before using
	string functions on it.
	(md-operand:immediate-predicate): Add symbol->string conversion.
	(md-operand:fixed-rtx): Likewise.
	(md-insn:isas): Use convert-isa.  Return a list of strings.
	(write-inputs): Convert the code to a string.
	(intrinsics.h): Use convert-isa.

2005-02-16  Dave Brolley  <brolley@redhat.com>

	* desc-cpu.scm: Rename CGEN_ISA_MASK to CGEN_BITSET. Rename
	cgen_isa_mask_* to cgen_bitset_*.
	* utils-gen.scm: Likewise.

2005-01-27  Jim Blandy  <jimb@redhat.com>

	* desc-cpu.scm: Escape embedded backslashes in the redact
	directive, so the line will be edited both when desc-cpu.scm is
	redacted, and when generated files are redacted.

2005-01-25  Nick Clifton  <nickc@redhat.com>

	Issue 57096
	* cpu/ms1.cpu (INTLVR): Restore this insn.

2004-12-22  Nick Clifton  <nickc@redhat.com>

	Issue 57078
	* cpu/ms1.cpu (nop): New insn pattern.

2004-12-16  Jim Blandy  <jimb@redhat.com>

	* sid-cpu.scm (-gen-hw-stream-and-destream-fns): Restore version
	deleted by merge.
	(cgen-cpu.h): Call it.

	* sid-cpu.scm (-gen-writestacks, -gen-register-writer,
	-gen-memory-writer, -gen-reset-fn, -gen-unified-write-fn): Convert
	mode names to strings before operating on them as strings.

	* sid-cpu.scm (-hw-gen-write-struct-decl, -gen-register-writer,
	-gen-memory-writer): Use iota, defined in SRFI-1, not seq.
	
2004-08-03  Richard Sandiford  <rsandifo@redhat.com>

	* intrinsics.scm (intrinsics.h): Use new-style function prototypes.

2004-08-03  Richard Sandiford  <rsandifo@redhat.com>

	* intrinsics.scm (target:for-each-isa!): New function.
	(intrinsic-protos.h): Categorise intrinsics by ISA name.  Mark volatile
	intrinsics with "// volatile".

2004-08-03  Richard Sandiford  <rsandifo@redhat.com>

	* intrinsics.scm (intrinsic): Add an unspec field.
	(intrinsic:max): New function.
	(add-intrinsic): Pass initial unspec field to instrinisc:make.
	(next-unspec): New variable.
	(analyze-intrinsics!): Assign unspec numbers to each intrinsic.
	(first-unspec): Delete.
	(write-inputs): Add an unspec argument; use it instead of first-unspec.
	(write-to-one-output): Add an unspec argument.  Update calls to
	write-inputs.
	(write-insn): Update calls to write-inputs and write-to-one-output.

2004-07-01  Nick Clifton  <nickc@redhat.com>

	* sid-cpu.scm: Replace 'filter' with 'find' in recently restored
	code.

2004-06-30  Nick Clifton  <nickc@redhat.com>

	* sid-cpu.scm: Attempt to restore this patch which was unprotected
	by sanitization and so removed during a merge.

	2001-06-05  graydon hoare  <graydon@redhat.com>

	* sid-cpu.scm ((gen-write-stack-structure)): Replace parexec stuff
	with write stack stuff.
	((cgen-write.cxx)): Replace per-insn writebacks with single write
	stack writeback. Add write stack reset function.
	((-gen-scache-semantic-fn insn)): Replace parexec stuff with write
	stack stuff.

2004-06-18  Richard Sandiford  <rsandifo@redhat.com>

	* intrinsics.scm (-stall-attribute): New function.
	(target:attributes): Handle the STALL attribute.

2004-06-18  Richard Sandiford  <rsandifo@redhat.com>

	* intrinsics.scm (target:guess-mode-from-hw): Replace with...
	(target:guess-mode): ...this more general function.
	(md-operand:guess-mode): Adjust accordingly.

2004-06-18  Richard Sandiford  <rsandifo@redhat.com>

	* intrinsics.scm (md-operand:constant): Delete.
	(md-operand:fixed-register): New function.
	(target:frob-arguments, target:reg-constraint)
	(md-operand:fixed-rtx): Use it.
	(target:first-unused-register, shadow-registers): New variables.
	(get-shadow): New function.
	(write-to-one-output): If a non-volatile insn writes to a fixed
	register as a side-effect, also assign to a shadow global register.
	(intrinsics.h): Declare the shadow registers.

2003-10-21  Richard Sandiford  <rsandifo@redhat.com>

	* cgen-intrinsics.scm (intrinsics-arguments): Convert argument names
	from symbols to strings.  Add first-pass entries.

	* intrinsics.scm (write-nonempty-list): New function.
	(write-cgen-insn): If an intrinsic has no arguments, use a null
	entry to initialise argument arrays.

2003-10-21  Richard Sandiford  <rsandifo@redhat.com>

	* desc-cpu.scm (@arch@_cgen_ifld_table): Fix terminator.
	(@arch@_cgen_hw_table): Likewise.
	(@arch@_cgen_operand_table): Likewise.
	(@arch@_cgen_insn_table): Likewise.
	(@arch@_cgen_rebuild_tables): Treat cd->isas as a bitset pointer.
	(@arch@_cgen_cpu_open): Likewise.
	* desc.scm (<keyword>,'gen-defn): Fix attribute initialisation.

2003-10-09  Jim Blandy  <jimb@redhat.com>

	* desc-cpu.scm (gen-hw-table-decls): Remove Red Hat sanitization
	around extern declaration for @arch@_cgen_hw_table.

	* mach.scm (def-isa-attr!): Remove Red Hat sanitization around
	extended list of things that can have the ISA attribute.  This
	change is now in the public CGEN sources.

2003-10-01  Nick Clifton  <nickc@redhat.com>

	* read.scm (-keep-mach-set!): Suppress check for mismatched
	cpu families.  The test appears to be useless and it breaks the
	building of several ports. 

2003-09-29  Dave Brolley  <brolley@redhat.com>

	* desc-cpu.scm (gen-fld-defns): Use gen-obj-attr-end-defn.
	(gen-operand-table): Ditto.

2003-09-26 Stan Cox  <scox@redhat.com>

	2003-07-30  Jim Blandy  <jimb@redhat.com>

	* intrinsics.scm (suffixed-hardware-recognizer, is-h-cr64?,
	is-h-cr?, is_h-ccr?): New functions.
	(target:guess-mode-from-hw, target:base-reg,
	target:reg-constraint): Use the predicates, instead of assuming
	fixed names for the coprocessor registers.

	2003-05-28  Richard Sandiford  <rsandifo@redhat.com>

	* intrinsics.scm (bitmask): Use gen-c-symbol.
	(md-insn-groups): New variable.
	(md-insn:groups): If an instruction uses a specific rtl code, put it
	in the "known-code" group.
	(intrinsic:unspec-version, add-intrinsic): New functions.
	(gcc-hook): Add an unspec-version field.
	(well-known-intrinsic): Use add-intrinsic.  If the intrinsic uses
	a specific rtl code, add another version that uses an unspec.
	(find-intrinsic): Use add-intrinsic.
	(make-md-insn): Rename to...
	(add-md-insn): ...this.  Take the intrinsic and define_insn prefix
	as arguments.  Add the instruction to md-insns.
	(analyze-intrinsics!): Rework accordingly.  If a well-known intrinsic
	has an unspec variant, add an instruction to that variant too.
	(next-unspec, auto-incr-next-unspec): Remove.
	(first-unspec): New variable.
	(write-inputs): Use intrinsic:index and first-unspec to calculate
	the unspec number.
	(intrinsics.h): Use md-insn-groups rather than target:groups.

	2003-05-07  Richard Sandiford  <rsandifo@redhat.com>

	* intrinsics.scm (md-operand:true-immediate?): Remove.
	(md-operand:immediate?): Only return true for real immediates.
	Replace uses of true-immediate? with immediate? throughout file.
	(make-md-insn): Accept regnums as outputs.
	(write-syntax): Remove regnum handling.
	(write-cgen-insn): Write information about regnum operands.
	(intrinsics.h): Declare the associated structures and fields.

	2003-05-06  Richard Sandiford  <rsandifo@redhat.com>

	* intrinsics.scm (intrinsics.h): Generate a table describing the
	range and alignment of immediate operands.

	2003-05-04  Richard Sandiford  <rsandifo@redhat.com>

	* intrinsics.scm (target:declare-fields): New.
	(target:initialize-fields): New.  Add the length of the instruction
	to the cgen_insn structure.
	(target:add-well-known-intrinsics): Add *i3 and cmov* intrinsics.
	(write-insn): Rename CGEN_ENABLE_INTRINSIC_P to CGEN_ENABLE_INSN_P.
	(write-cgen-insn): Call target:initialize-fields.
	(intrinsics.h): Call target:declare-fields.  Rename
	CGEN_ENABLE_INTRINSIC_P to CGEN_ENABLE_INSN_P.

	2003-04-29  Richard Sandiford  <rsandifo@redhat.com>

	* intrinsics.scm: Rework to handle INTRINSIC attribute.

2003-08-26  Dave Brolley  <brolley@redhat.com>

	* gen-all-doc: Add fr550.

2003-05-06  Dave Brolley  <brolley@redhat.com>

	* Pick up missing bits from the last merge from sources.redhat.com.
	
2002-12-13  Dave Brolley  <brolley@redhat.com>

	* utils-cgen.scm (gen-attr-type): Moved from sid.scm.
	(-gen-attr-accessors): New function.
	(gen-obj-attr-defn): Update terminating initializer.
	(gen-obj-attr-end-defn): New function.
	* sid.scm (gen-attr-type): Moved to utils-cgen.scm.
	* sid-cpu.scm (cgen-desc.h): Generate code to include
	"opcode/cgen-bitset.h"
	* intrinsics.scm (kept-insn-isas): Correct the extraction of the isa
	name.
	* desc.scm ('gen-defn): Update terminating initializer.
	* desc-cpu.scm (gen-ifld-decls): Call -gen-attr-accessors. Update
	terminatinig initializer.
	(gen-hw-decls): Ditto.
	(gen-operand-decls): Ditto.
	(gen-insn-decls): Ditto.
	(-gen-hash-defines): Generate code to include "opcde/cgen-bitset.h"
	(gen-insn-table): Update terminating initializer.
	(-gen-cpu-open): Update generation of @arch@_cgen_rebuild_tables,
	@arch@_cgen_cpu_open, @arch@_cgen_cpu_close.
	* attr.scm (charmask-bytes): New function.
	(bitset-attr->charmask): New function.
	(<bitset-attribute>): Handle isa-attributes specially. Also handle
	differences for SID-SIMULATOR.
	(<integer-attribute>): Handle differences for SID-SIMULATOR.
	(<enum-attribute>): Ditto.

2001-06-05  graydon hoare  <graydon@redhat.com>

	* utils.scm (foldl): Define.
	(foldr): Define.
	(filter): Define.
	(union): Define.
	(intersection): Simplify.
	* sid.scm : Set APPLICATION to SID-SIMULATOR.
	(-op-gen-delayed-set-maybe-trace): Define.
	(<operand> 'gen-set-{quiet,trace}): Delegate to
	op-gen-delayed-set-quiet etc. Note: this is still a little tangled
	up and needs cleaning.
	(-with-parallel?): Hardwire with-parallel to #t.
	(<operand> 'cxmake-get): Replace with lookahead-aware code
	* sid-decode.scm: Remove per-insn writeback fns.
	(-gen-idesc-decls): Redefine sem_fn type.
	* sid-cpu.scm (gen-write-stack-structure): Replace parexec stuff
	with write stack stuff.
	(cgen-write.cxx): Replace per-insn writebacks with single write
	stack writeback. Add write stack reset function.
	(-gen-scache-semantic-fn insn): Replace parexec stuff with write
	stack stuff.
	* rtl-c.scm (xop): Clone operand into delayed operand if #:delayed
	estate attribute set.
	(delay): Set #:delayed attribute to calculated delay, update
	maximum delay of cpu, check (delay ...) usage.
	* operand.scm (<operand>): Add delayed slot to <operand>.
	* mach.scm (<cpu>): Add max-delay slot to <cpu>.
	* dev.scm (load-sid): Set APPLICATION to SID-SIMULATOR.
	* doc/rtl.texi (Expressions): Add section on (delay ...).

2002-05-10  Ben Elliston  <bje@redhat.com>

	* cpu/mep-core.cpu (smcpm1): Use modulo register bank 1, not bank 0.
	(lmcpm1): Likewise.

2002-05-08  Dave Brolley  <brolley@redhat.com>

	* intrinsics.scm (op-mode): Add 'cp-data-bus-width' parameter. Handle
	CP_DATA_BUS_INT.
	(type-code): Ditto.
	(op-identifier): Add 'cp-data-bus-width' parameter to pass on to helper
	functions.
	(string-of-operand): Ditto.
	(write-to-one-output): Ditto.
	(insn-uses-cp-data-bus?): New function.
	(one-op-uses-cp-data-bus?): New function.
	(write-insn-variants): New function.
	(declare-intrinsic-variants): New function.
	(write-insn): Add 'suffix' and 'cp-data-bus-width' parameters.
	(declare-intrinsic): Ditto.
	(insns.md): Call write-insn-variants.
	(intrinsics.h): Call declare-intrinsic-variants.
	(intrinsic-protos.h): Correct generated comment. Generate a typedef
	for cp_data_bus_int.
	(test-val): Handle CP_DATA_BUS_INT.

2002-03-19  Graydon Hoare  <graydon@redhat.com>

	* intrinsics.scm (insn-operands): New table.
	(scan-syntax): Do single pass over operands, not reads/writes.
	(syntactic-operands): Initialize with spr/tpr ops stripped.
	(op-match-pos): Count non-retval args from 1.
	(op-flavour): Only use mep_reference_operand in lvalue position.
	(op-constraints): Never return "+".
	(string-of-operand): Do constrained-matches rather than dups in some
	cases. Pass current output as arg to determine cases.
	(curr-insn-op-list): New list.
	(write-insn): Save curr-insn-op-list in insn-operands table.
	(declare-intrinsic): Disable return-value form. Write op_mapping
	rather than arg_mapping, using insn-operands table.

2002-03-07  Graydon Hoare  <graydon@redhat.com>

	* desc-cpu.scm: Cleanups to avoid warnings in generated code.
	
	* cgen-intrinsics.scm (intrinsics-arguments): Add
	testsuite-generation entry.
	
	* intrinsics.scm (scan-syntax): Handle r0 as implicit arg 0,
	disable return values.
	(runtime-type): Base on CTYPE attribute.
	(is-label, type-code, op-mode): Likewise
	(scan-read-write): Support immediate regnums.
	(treat-op-as-immediate, reformat-syntax): Likewise.
	(op-constraints): Handle rn3 ops ("t" constraint)
	(set-curr-label-operand-names): Relax label condition.
	(insns.md): Add auto-generated-file warning.
	(intrinsics.h, intrinsic-protos.h): Likewise.
	(intrinsic-testsuite.c, test-val, declare-intrinsic-test): Add.
	
2002-02-22  Graydon Hoare  <graydon@redhat.com>

	* intrinsics.scm (scan-read-write): Add strip-spr-tpr-ops call
	to avoid sp/tp-rel operands in semantic patterns.

2002-01-25  Frank Ch. Eigler  <fche@redhat.com>

	* intrinsics.scm (do-this-insn?): Support per-configuration core 
	intrinsics.

2002-01-02  Graydon Hoare  <graydon@redhat.com>

	* intrinsics.scm (scan-read-write): Handle case where syntactic
	operands do not appear in semantics.

2001-11-22  Graydon Hoare  <graydon@redhat.com>

	* intrinsics.scm (op-flavour): Support mep_reference_operand.
	(op-of-interest): Permit 'pc to pass through.
	(reformat-syntax): Support label operand syntax.
	(curr-non-label-reads): New variable.
	(curr-label-operand-name): Likewise.
	(is-immediate): New function.
	(set-curr-label-operand-name): Likewise.
	(write-to-one-output): Migrate logic out of write-insn, add support
	for conditional control transfer insns.
	(write-insn): Call set-curr-label-operand-name,
	write-to-one-output; handle "--reserved--" insns.
	(type-node): Support ptr_type_node for labels.
	(declare-intrinsic): Call set-curr-label-operand-name.
	(do-this-insn?): Skip "--unused--" and "--reserved--" insns.

2001-11-06  graydon hoare  <graydon@redhat.com>

	* intrinsics.scm (unspec): New Function.
	(write-insn): Use unspec to choose between unspec
	and unspec_volatile in insn pattern.

2001-11-05  graydon hoare  <graydon@redhat.com>

	* intrinsics.scm (pick-slot): New Function.
	(latency-of): New Function.
	(write-insn): Use pick-slot, latency-of to encode
	slot, latency attributes in insn pattern.

2001-10-31  graydon hoare  <graydon@redhat.com>

	* intrinsics.scm (strip-spr-tpr-ops): Add.
	(reformat-syntax): Special cases for spr, tpr.
	(declare-intrinsic-proto): Likewise.
	(declare-intrinsic): Likewise.

2001-10-29  graydon hoare  <graydon@redhat.com>

	* pmacros.scm (pmacros-init!): Enable (.eval ...).

2001-10-26  graydon hoare  <graydon@redhat.com>

	* cgen-intrinsics.scm (intrinsics-arguments): Back out
	argument munging step, which was making sid angry.
	* read.scm (-cgen): Likewise.

2001-10-25  graydon hoare  <graydon@redhat.com>

	* cgen-intrinsics.scm (intrinsics-arguments): Make aware of
	multi-coprocessor ISA cartesian product.
	* intrinsics.scm: Likewise.
	* read.scm (-cgen): Likewise.
	(expand-cop-ext-isas): Add support function.

2001-10-17  graydon hoare  <graydon@redhat.com>

	* intrinsics.scm (op-identifier): Make robust against
	raw ifield operands, constant encodings

2001-10-11  graydon hoare  <graydon@redhat.com>

	* cgen-intrinsics.scm (declare-intrinsic): Use obj:name
	rather than insn-mnemonic.

2001-10-11  graydon hoare  <graydon@redhat.com>

	* cgen-intrinsics.scm (declare-intrinsic): Minor syntatic
	bugfixes in generated intrinsics structure.

2001-10-09  graydon hoare  <graydon@redhat.com>

	* cgen-intrinsics.scm (intrinsics-arguments): Support
	selection of ISAs for intrinsics generation.
	* intrinsics.scm: Likewise.

2001-10-08  Nick Clifton  <nickc@cambridge.redhat.com>

	* cpu/frv.opc: Add missing prototypes.
	Fix formatting.
	* cpu/mep.opc: Add missing prototypes.
	* cpu/sh.opc: Add missing prototypes.
	Fix formatting.

2001-10-04  graydon hoare  <graydon@redhat.com>

	* cgen-intrinsics.scm: New file for toshiba mep intrinsic function
	support.

	* intrinsics.scm: Likewise.

2001-07-04  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (reti): Set result mode of (sll ..) to SI.

2001-07-03  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (epc, exc): New operands.
	(reti): Partially implement.
	(swi): Implement.

2001-07-03  John Healy  <jhealy@redhat.com>

	* mep-cop.cpu: Fixed Format 3 ifields and insn formats.

2001-07-03  John Healy  <jhealy@redhat.com>

	* mep-cop.cpu: Added ifields, operands and instructions for 
	Fomrat1, Format2 and Format3 instructions.

2001-07-03  John Healy  <jhealy@redhat.com>

	* mep-cop.cpu: New cpu file for Dummy64 coprocessor.

2001-06-26  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (di): Clear IEC bit in the PSW.
	(ei): Likewise, set it.
	(halt): Set the HALT bit in the PSW.
	(break): Make a C call to break_exception().
	(div): Detect divide by zero exceptions and make a C call to
	zdiv_exception() to handle them.
	(divu): Likewise.

2001-06-21  graydon hoare  <graydon@redhat.com>


2001-06-19  John Healy  <jhealy@redhat.com>

	* mep-core.cpu: Added VLIW_ALONE, VLIW_NO_CORE_NOP,
	VLIW_NO_COP_NOP, TEST1_SOLE, TEST1_IMPLY, TEST1_IMPLIED
	instruction attributes.

2001-06-13  DJ Delorie  <dj@redhat.com>

	* mep-core.cpu (pcrel8a2, beqz, bnez): Make these relaxable.

2001-05-30  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (ssarb): Implement correct semantics for both cases
	of big and little endian operation.

2001-05-29  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (repeat): Finalise semantics.
	(erepeat): Likewise.

2001-05-29  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (h-csr, set): Clear the top 16 bits of a new value
	set to $mb0, $me0, $mb1 or $me1.
	(mb0, me0, mb1, me1): New operands.
	(btstm): Zero extend memory contents before loading $0.
	(compute-mask0, compute-mask1): New pmacros.
	(mod0, mod1): Likewise.
	(sbcpa, lbcpa): Finalise semantics.
	(shcpa, lhcpa): Likewise.
	(swcpa, lwcpa): Likewise.
	(smcpa, lmcpa): Likewise.
	(sbcpm0, lbcpm0): Likewise.
	(shcpm0, lhcpm0): Likewise.
	(swcpm0, lwcpm0): Likewise.
	(smcpm0, lmcpm0): Likewise.
	(sbcpm1, lbcpm1): Likewise.
	(shcpm1, lhcpm1): Likewise.
	(swcpm1, lwcpm1): Likewise.
	(smcpm1, lmcpm1): Likewise.
	(cmov1, cmov2): Simplify semantics.
	(cmovc1, cmovh2): Likewise.
	(sim-syscall): Pass pc in the c-call.

	(cp): Temporarily remove.

2001-05-25  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (clipu): Correct semantics.

2001-05-25  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (sim-syscall): New pseudo instruction.
	(swi): Denote semantics as unimplemented.

	* mep-core.cpu (All optional instructions): Make a c-call to
	"check_option_OPT" at the beginning of each instruction's
	semantics, where "OPT" is an option identifier (eg. "ldz").
	* mep-sample-ucidsp.cpu (uci, dsp): Likewise.

2001-05-24  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (stcb, ldcb): Implement semantics.

2001-05-23  Dave Brolley  <brolley@redhat.com>

	* frv.opc (parse_u12): New function.
	* frv.cpu (u-media-2-acc): New execution unit for fr400.
	(u-media-2-acc-dual): Ditto.
	(u-media-2-add-sub): Ditto.
	(u-media-2-add-sub-dual): Ditto.
	(u-media-3-dual): Ditto.
	(u-media-4-acc-dual): Ditto.
	(f-s5): New ifield.
	(f-u12-h): New ifield.
	(f-u12-l): New ifield.
	(f-u12): New multi ifield.
	(f-ACCj-null): New ifield.
	(f-misc-null-11): New ifield.
	(s5): New operand.
	(u12): New operand.
	(ACCj-null): New pmacro.
	(misc-null-11): New pmacro.
	(media-set-12): New pmacro.
	(mhsetlos): New insn.
	(mhsethis): New insn.
	(mhdsets): New insn.
	(set-5-semantics): New pmacro.
	(media-set-5): New pmacro.
	(mhsetloh): New insn.
	(mhsethih): New insn.
	(mhdseth): New insn.
	(mdcutssi): New insn.
	(media-dual-word-rotate-r-r): New pmacro.
	(mdrotli): New insn.
	(mcplhi): New insn.
	(mcpli): New insn.
	(mqsaths): New insn.
	(saturate-v): Operate on DI type operands.
	(mabshs): New insn.
	(media-arith-sat-semantics): Declare 'tmp' as DI.
	(media-acc-arith-sat): New pmacro.
	(maddaccs): New insn.
	(msubaccs): New insn.
	(media-dual-acc-arith-sat): New pmacro.
	(mdaddaccs): New insn.
	(mdsubaccs): New insn.
	(masaccs): New insn.
	(mdasaccs): New insn.
	(media-quad-multiply-cross-acc-semantics): New pmacro.
	(media-quad-multiply-cross-acc): New pmacro.
	(mqxmachs): New insn.
	(media-quad-cross-multiply-cross-acc-semantics): New pmacro.
	(media-quad-cross-multiply-cross-acc): New pmacro.
	(mqxmacxhs): New insn.
	(media-quad-cross-multiply-acc-semantics): New pmacro.
	(media-quad-cross-multiply-acc): New pmacro.
	(mqmacxhs): New insn.

2001-05-22  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (lwcp16): Implement semantics.
	(lmcp16): Likewise.
	(div): Handle special case of division overflow described in the
	archietecture documentation and avoid such overflows on the host!

2001-05-21  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (lwcp, lwcpi): Complete implementation.

2001-05-18  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (lwcp, lwcpi): Primitive implementation.

2001-05-17  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (lmcp, lmcpi): Implement semantics.

	* mep-core.cpu (psw): New operand.
	(swcp, smcp, swcpi, smcpi, swcp16, smcp16): Implement semantics.
	(jsrv, bsrv): Likewise.

	* mep-core.cpu (extb, exth): Use correct modes for (ext ..) args.

	* mep-core.cpu (mul, mulu, mulr, mulru): Correct semantics.
	(madd, maddu, maddr, maddru): Likewise.
	
2001-05-16  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (h-csr, get): Clean up expression using (cond).
	(h-csr, set): Make $id read-only. Likewise, clean up.

2001-05-15  Dave Brolley  <brolley@redhat.com>

	* frv.cpu (f-ae): New ifield.
	(f-GRk-null): New ifield.
	(ae): New insn operand.
	(GRk-null): New pmacro.
	(cmpb): New insn.
	(cmpba): New insn.
	(cache-invalidate): Add new argument 'all' and pass it to
	@CPU@_{data|insn}_cache_invalidate.
	(ici): Pass 0 for 'all' argument.
	(dci): Pass 0 for 'all' argument.
	(cache-invalidate-entry): New pmacro.
	(icei): New insn.
	(dcei): New insn.
	(dcef): New insn.

2001-05-15  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (fsft): Correct semantics.

	* mep-core.cpu (h-csr, get): Return .+2 if reading index 0 ($pc).
	(h-csr, set): Make $pc read-only by performing a nop.

2001-05-14  Dave Brolley  <brolley@redhat.com>

	* frv.cpu: Call @cpu@_model_branch for all branching insns. Reassign
	trap and check insns to u-trap and u-check respectively.
	(u-branch): Remove ICCi_3 and FCCi_3 inputs.
	(u-trap): New execution unit.
	(u-check): New execution unit.
	(u-media-dual-unpack): Removed in fr400 model.
	
2001-05-14  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (syncm): Rename from "sycnm" (typo).

2001-05-11  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (swi): Escape to a C handler. 

2001-05-09  Dave Brolley  <brolley@redhat.com>

	* frv.cpu: Assign execution units for fr400.
	(model fr400): Add state and execution units.
	(prev-fp-load): New model state variable.
	(prev-media-p1): Ditto.
	(prev-acc-p2): Ditto.
	(cur-fp-load): New model state variable.
	(cur-media-p1): Ditto.
	(cur-acc-p2): Ditto.

2001-05-04  DJ Delorie  <dj@redhat.com>

	* mep-core.cpu (erepeat): Rm field is 1, not zero.
	(f-29, f-30, f-31): New.
	(clip): Use f-29 through f-31.
	(clipu): Use f-29 through f-31. f-31 is 1, not zero.
	(coprocessor load/store): Use f-29 through f-31 as needed.

	* mep-core.cpu (f-8s8a2, f-12s4a2, f-17s16a2, f-24s5a2n): Insert
	and extract pc-relative operands correctly.
	(pcrel8a2, pcrel12a2, pcrel17a2, pcrel24a2, pcabs24a2): Make sure
	they're printed as addresses, not integers.
	* mep.opc (print_signed16, print_align, print_unsigned16,
	print_unsigned7): Removed, no longer needed.
	
2001-05-03  Frank Ch. Eigler  <fche@redhat.com>

	* mep-core.cpu (mep isa): Changed to 32/32/32-bit base/insnword/insn.
	(f-6): Removed unused bitfield.

2001-05-02  Dave Brolley  <brolley@redhat.com>

	* frv.cpu (fr500): Move state data structures which are global to all
	machines to sim/frv/profile.h.

2001-05-02  DJ Delorie  <dj@redhat.com>

	* mep-core.cpu: List symbolic register names first, so that the
	disassembler uses them instead of raw numbers.

	* mep-core.cpu: Request a custom print function as well as a parse
	function (mostly for tpreg and spreg).
	* mep.opc: Define custom print functions.

2001-05-01  DJ Delorie  <dj@redhat.com>

	* mep-core.cpu: Rename all fields and operands to make them more
	consistent.  Use custom parsers for %() syntax and aligned
	constants.  Fix various bugs wrt signedness and field
	positions.
	(jsrv, bsrv): Add.
	* mep.opc: New, provide hash definitions and custom parsers.

2001-04-27  Dave Brolley  <brolley@redhat.com>

	* frv.opc (FRV_PIPE_SIZE): Rename to FRV_VLIW_SIZE.
	(VLIW_PIPE): Rename to VLIW_COMBO.
	(FRV_PIPE): Rename to FRV_VLIW.
	(FRV_VLIW): New member 'mach'.
	(FRV_VLIW): New member 'unit_mapping'.
	(frv_pipe_reset): Renamed to frv_vliw_reset.
	(frv_pipeline_add_insn): Renamed to frv_vliw_add_insn.
	(FRV_IS_BRANCH_INSN): Deleted.
	(FRV_IS_FLOAT_INSN): Deleted.
	(FRV_IS_MEDIA_INSN): Deleted.
	(frv_is_branch_major): New function.
	(frv_is_float_major): New function.
	(frv_is_media_major): New function.
	(frv_is_branch_insn): New function.
	(frv_is_float_insn): New function.
	(frv_is_media_insn): New function.
	(fr400_allowed_vliw): New table.
	(allowed_vliw): Renamed to fr500_allowed_vliw.
	(fr400_unit_mapping): New table.
	(fr500_unit_mapping): New table.
	(frv_vliw_reset): Set 'mach' and 'unit_mapping' fields.
	(match_pipe): Renamed to match_unit.
	(match_pipeline): Renamed to match_vliw.
	(add_next_to_pipe): Renamed to add_next_to_vliw.
	(find_major_in_pipeline): Renamed to find_major_in_vliw.
	(fr400_check_insn_major_constraints): New function.
	(fr500_check_insn_major_constraints): New function.
	(check_insn_major_constraints): Call machine specific functions.
	* frv.cpu: Added fr400 major insn categories.
	(PIPE): Renamed to UNIT.
	(PIPE NULL): Renamed to (UNIT NIL).
	(PIPE NUM_PIPES): Renamed to (UNIT NUM_UNITS).
	(MULT-DIV): new UNIT enumerator.
	(LOAD): new UNIT enumerator.
	(MAJOR): Renamed to FR500-MAJOR.
	(FR400-MAJOR): New insn enumeration.
	(sdiv): Assign to UNIT MULT-DIV.
	(nsdiv): Ditto.
	(udiv): Ditto.
	(nudiv): Ditto.
	(multiply-r-r): Ditto.
	(scan): Ditto.
	(csmul): Ditto.
	(csdiv): Ditto.
	(cudiv): Ditto.
	(cscan): Ditto.
	(multiply-cc-r-r): Ditto.
	(csmulcc): Ditto.
	(sdivi): Ditto.
	(nsdivi): Ditto.
	(udivi): Ditto.
	(nudivi): Ditto.
	(multiply-r-simm): Ditto.
	(scani): Ditto.
	(multiply-cc-r-simm): Ditto.
	(all load insns): Assign to UNIT LOAD.

2001-04-24  Frank Ch. Eigler  <fche@redhat.com>

	* mep-core.cpu: Set insn-lsb0? to #f.  Reversed all ifield
	bit numbers to work around cgen limitation.

2001-04-23  Dave Brolley  <brolley@redhat.com>

	* frv.cpu (h-acc40S): Check write access.
	(h-acc40U): Check write access.

2001-04-21  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (f-imm7a4): New ifield.
	(imm7a4): New operand.
	(add3): Use it and prefix `sp' with `$'.

2001-04-10  Dave Brolley  <brolley@redhat.com>

	* frv.cpu: Use MACH attribute to indicate insns not implemented on
	fr400.
	(h-psr_imple): New hardware element.
	(h-psr_ver):  New hardware element.
	(h-psr_ice):  New hardware element.
	(h-psr_be):  New hardware element.

2001-04-05  Jason Eckhardt  <jle@redhat.com>

        * frv.cpu (conditional-register-transfer cmovfg): Obtain the
        operands of cmovfg from the correct fields.

2001-04-05  Eric Christopher  <echristo@redhat.com>
	    Dave Brolley   <brolley@redhat.com>

	* frv.cpu: (media-complex-semantics-i): New define.
	(media-dual-complex-semantics): New define.
	(media-dual-complex-i): New define.
	(mcpxis): Use media-dual-complex-i.
	(mcpxiu): Ditto.
	(conditional-media-dual-complex-i): New define.
	(cmcpxis): Use conditional-media-dual-complex-i.
	(cmcpxiu): Ditto.
	(media-quad-complex-i): New define.
	(mqcpxis): Use media-quad-complex-i.
	(mqcpxiu): Ditto.

2001-04-05  Dave Brolley  <brolley@redhat.com>

	* frv.cpu (define-arch): Add fr400 machine.
	(fr400): New define-mach.
	(fr400): New define-model.

2001-04-04  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (f-rl): New ifield.
	(rl): New operand.
	(add3): Use it.

2001-04-03  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (f-imm6): Make signed.
	(imm6): Bind to h-sint.

	* mep-core.cpu (fsft): Correct semantics.

	* mep-core.cpu (h-gpr): Make "fp" an alias for $12.
	(h-csr): Make non-virtual.
	(beqz, bnez): Fix least significant bit field in format.

2001-03-29  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (f-disp8a2): Fix starting bit number.
	(f-imm2): Likewise.
	(f-bimm8): New ifield.
	(bimm8, cimm5): New operands.
	(movi8): Use $bimm8, not $imm8.
	(sbvck3): Rename from `sbvck'.
	(bra, bsr12): Use f-0 in format field, not f-16.
	(bgei): Replace `bgti' with `bgei' in syntax string.
	(cache): Use $cimm4, not $imm4.

	* mep-sample-ucidsp.cpu (uci, dsp): Remove extraneous spaces
	between operands.

2001-03-28  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (isa mep, default-insn-word-bitsize): Set to 16.
	(All ifields): Renumber for the base instruction bits being in the
	range 15..0.  The designation is now 15..0|31..16.
	(nimm5): Update subfields, insert and extract members.
	(All instructions): Update ifields renamed by renumbering.

2001-03-28  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (h-cr): Prefix keywords with `$cr'.
	(h-ccr): Prefix keywords with `$ccr'.
	(csrn): New operand.
	(nimm5): Remove.
	(stc, ldc): Use $csrn not $nimm5.

2001-03-26  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (h-gpr, indices): Prefix all keywords with `$'.
	(h-csr, indices): Likewise.
	(add3): Change `r0' to `$0' (and `r1' -> `$1') for fixed register
	names appearing in syntax strings.
	(advck3, sbvck, slt3, sltu3, slt3i, sltu3i): Likewise.
	(sl1ad3, sl2ad3, sll3, btstm): Likewise.

	* mep-core.cpu (h-gpr, indices): Remove extraneous r16 entry.
	(add3): Prefix operands with `$' (typo).
	(beqi): Likewise, prefix imm4 with `$'.
	(All instructions): Remove extraneous spaces between operands.
	(nop): New macro instruction.

2001-03-20  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (mul): Simplify semantics.
	(mulu, mulr, mulur, madd, maddu, maddr, maddru): Likewise.
	(cmovh1): Zero extend rm to a DI before shifting.

2001-03-20  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu (btstm, tas): Correct syntax string typos.
	(cmov1, cmov2): Rename from duplicate cmov definitions.
	(cmovc1, cmovc2): Likewise for cmovc.
	(cmovh1, cmovh2): Likewise for cmovh.

2001-03-19  Ben Elliston  <bje@redhat.com>

	* mep-default.cpu: New file.
	* mep-sample-ucidsp.cpu: Likewise.

2001-03-05  Ben Elliston  <bje@redhat.com>

	* mep-core.cpu: New file.

2001-01-11  Ben Elliston  <bje@redhat.com>

	* sh64-media.cpu (fldp, fldxp): Fix semantics for loading pairs.
	(fstp, fstxp): Likewise for storing pairs.
	
	* sh.cpu (h-grc): Zero extend mask.
	* sh64-media.cpu (f-uimm6): New field.
	(uimm6): New operand.
	(shari, sharil): Use it.
	(shlli, shllil): Likewise.
	(shlri, shlril): Likeiwse.

2001-01-08  Ben Elliston  <bje@redhat.com>

	* sh.cpu (h-pc): Define get and set methods. Set h-ism to the
	least significant bit of the pc whenever the pc is altered.
	(h-endian): Prohibit setting, via (error ..) in the set method.
	(h-ism): Define get and set methods (prohibit setting).
	* sh64-compact.cpu (bf): Do not set `ism' directly or mask the
	least significant bit of the pc; just set the pc directly.
	(bfs, bra, braf, bsr, bsrf, bt, bts, jmp, jsr, rts): Likewise.
	* sh64-media.cpu (beq, beqi, bge, bgeu, bgt, bgtu): Likewise.
	(blink, bne, bnei): Likewise.

2001-01-06  Ben Elliston  <bje@redhat.com>

	* sh64-media.cpu (addl, addil): Infer mode from operand modes.
	* sh.cpu (h-dr, get): Zero extend partial result.
	(h-dr, set): Re-work.

2001-01-04  Ben Elliston  <bje@redhat.com>

	* sh64-compact.cpu (fcmpgt): Reverse order of operands.

2001-01-03  Ben Elliston  <bje@redhat.com>

	* sh64-compact.cpu (fmov5): Test transfer size in frm, not frn.
	(bf): Handle instruction set mode switches based on the pc.
	(bfs, bra, braf, brk, bsrf, bt, bts, jmp, jsr, rts): Likewise.

	* sh.cpu (h-cr): CR0 is an alias for the status register (h-sr).

2000-12-26  Ben Elliston  <bje@redhat.com>

	* sh64-media.cpu (beq): Set instruction set mode (ism) based on
	the least significant bit of the target address.
	(beqi, bge, bgeu, bgt, bgtu, blink, bne, bnei): Likewise.
	(ldxub): Use UQI mode for memory read.
	(ldxuw): Likewise, use UHI mode.
	(stxl): Use SI mode for (subword ..), not QI!

2000-12-19  Ben Elliston  <bje@redhat.com>

	* sh64-media.cpu (fldp): Remove unused local symbol.
	(fldxp): Likewise.
	(subl): Sign extend to DI, not SI.

2000-12-15  Ben Elliston  <bje@redhat.com>

	* sh64-compact.cpu (trapa): Call sh64_compact_trapa.

	* sh64-media.cpu: Do not redundantly include "simplify.inc".
	(f-8-2): Rename from f-8. Update throughout.
	(f-imm6, f-imm10, f-imm16): Make fields signed.
	(f-disp6, f-disp10): Likewise.
	(f-uimm16): New field.
	(f-disp16): Don't add/subtract 1 when computing value.
	(uimm16): New operand.
	(addl): Use correct subword index.
	(addil): Likewise.
	(addzl): Likewise. Zero extend result to 64 bits.
	(-byterev-step): Enclose expressions in a sequence.
	(fiprs): Rewrite semantics.
	(fldp, fldxp): Likewise.
	(fmovdq, fmovls, fmovqd, fmovsl): Implement semantics.
	(ldl): Use disp10x4 operand.
	(ldq): Use disp10x8 operand.
	(ldw, lduw): Use disp10x2 operand.
	(ldxl): Read an SI from memory, not HI.
	(ldxuw, ldxw): Read an HI from memory, not SI.
	(slice-byte): Use correct subword indices.
	(slice-word, slice-word-unop): Likewise.
	(slice-long, slice-long-unop): Likewise.
	(all multimedia insns): Use (-join ..).
	(make-mextr): Rename from erroneously named `make-mextrn'.
	Simplify pmacro defintion.
	(mpermw): Correct semantics.
	(mulsl, mulul): Use correct subword indices.
	(pta): Add one to target address.
	(shardl, sharil): Use correct subword index.
	(shlldl, shllil): Likewise.
	(shlrdl, shlril): Likewise.
	(shori): Use uimm16 operand.
	(stb): Mask bottom 8 bits instead of using (subword ..).
	(stl): Likewise for 32 bits.
	(stw): Likewise for 16 bits.
	(-sthi-byte): New pmacro.
	(sthil): New instruction.
	(sthiq): Likewise.
	(stxb, stxl, stxw): Use correct register indices.
	(subl): Likewise.
	
2000-12-11  Ben Elliston  <bje@redhat.com>

	* sh.cpu (-slice-hi, -slice-si): Remove.
	* sh64-compact.cpu: Apply changes for -join-si.

2000-12-09  Ben Elliston  <bje@redhat.com>

	* sh.cpu (-slice-hi): New pmacro.
	(-slice-si): Likewise.
	(-join-si): Rename from -join2.
	(-join-hi): Rename from -join4.
	(-join-qi): Rename from -join8.

2000-12-08  Ben Elliston  <bje@redhat.com>

	* sh.cpu (h-cr): Make non-virtual.

2000-12-03  Ben Elliston  <bje@redhat.com>

	* sh64-compact.cpu (braf, bsrf): Sign extend register value for
	address computation.
	(fcmpeq, fcmpgt): Helper C functions return BI.

2000-12-01  Ben Elliston  <bje@redhat.com>

	* sh64-compact.cpu (fvc-names): Remove.
	(h-fvc): Name registers inline.
	(h-macl, set): Use (-join2 ..), not (subword ..).
	(h-mach, set): Likewise.
	(f-8-1): Rename from f-8. Update all users.
	(f-4, f-disp4): Remove.
	(xdm, xdn): Likewise.
	(dshci): Append "-compact" to instruction names.
	(xd): New pmacro.
	(cmpstr): Fix semantics.
	(div1): Rewrite semantics.
	(extd): New pmacro.
	(fmov1 to fmov7): Rewrite semantics.
	(negc): Fix semantics.
	(rotl, rotr, rotcl, rotcr): Likewise.
	(subc, subv): Likewise.

2000-11-29  Ben Elliston  <bje@redhat.com>

	* sh.cpu (arch sh, machs): Add sh2, sh3, sh3e and sh4.
	(mach sh2, mach sh3, mach sh3e, mach sh4): Define.
	(mach sh5, bfd-name): Remove.
	(h-gr): Avoid endian-sensitive `subword' rtx.
	(h-dr): Clean up getter and setter expressions.
	(h-endian): Make virtual. Define getter/setter expressions.
	(-join2, -join4, -join8): New private pmacros.

2000-11-24  Ben Elliston  <bje@redhat.com>

	* sh.cpu (sh5 mach): Specify bfd-name.
	(gr-names, dr-names): Remove. Specify in-line.
	(-build-greg-name): New pmacro.
	(h-gr): Use it.
	(h-grc): Likewise.
	(-build-creg-name): New pmacro.
	(h-cr): Use it.
	(-build-freg-name): New pmacro.
	(h-fr): Use it.
	(-build-fpair-name): New pmacro.
	(h-fp): New hardware element.
	(-build-fvec-name): New pmacro.
	(h-fv): Use it.
	(h-fmtx): Provide keyword names.
	(-build-dreg-name): New pmacro.
	(h-dr): Use it.
	(h-tr): Provide keyword names.

2000-11-22  Dave Brolley  <brolley@redhat.com>

	* frv.cpu (cr-undefined): New p-macro.
	(conditional-check-int-condition-code): Set the target CR to undefined
	if the condition is false.
	(cckra): Ditto.
	(cckno): Ditto.
	(conditional-check-float-condition-code): Ditto.
	(cfckra): Ditto.
	(cfckno): Ditto.

2000-11-22  Ben Elliston  <bje@redhat.com>

	* sh64-compact.cpu: Don't redundantly include "simplify.inc".
	
	* sh64-media.cpu (fpf): New operand.
	(fldp, fldxp, fstp, fstxp): Fix semantics.
	(ldloq, trapa): Fix typos in assembly syntax strings.

2000-11-21  Ben Elliston  <bje@redhat.com>

	* sh.cpu (h-dr): Fix getter and setter.
	(ism): New operand.
	(keep-isa?): Keep media.
	* sh64-media.cpu (blink): Improve semantics.
	(fstx): Eliminate use of (join ..).
	* sh64-compact.cpu: Many semantic bug fixes.

2000-11-16  Ben Elliston  <bje@redhat.com>

	* sh-compact.cpu: Rename from this ..
	* sh64-compact.cpu: .. to this.
	* sh-media.cpu: Rename from this ..
	* sh64-media.cpu: .. to this.
	* sh.opc: New file.
	* sh.cpu: Factor out some common hardware.

2000-11-10  Frank Ch. Eigler  <fche@redhat.com>

	* sid-decode.scm (-gen-extract-fn): New fn to generate extract
	functions.  Replaces
	(-gen-extract-case): Gone.
	(-define-all-extractor-fns, -declare-all-extractor-fns): New fns.
	(-gen-all-extractors): Gone.
	(-gen-decode-fn): Tell (gen-decoder) to emit calls to extractor fns.
	Emit extractor declarations and bodies.

2000-10-25  Frank Ch. Eigler  <fche@redhat.com>

	* sid-cpu.scm (-gen-write-fn, -gen-scache-semantic-fn): Swap
	return values.
	* sid-decode.scm (-gen-idesc-decls): Ditto, so writeback function
	returns actual sem_status.

2000-10-23  Frank Ch. Eigler  <fche@redhat.com>

	Support parallel insns via queued writebacks.
	* sid-cpu.scm (cgen-defs.h): Tweak header include guard and comments.
	Enable parallel-exec-type generation.
	(-gen-write-fn, -gen-write-fns): New functions for writeback function
	generation.
	(cgen-write.cxx): Call these.
	(-gen-write-case, -gen-write-switch): Remove.
	(-gen-scache-semantic-fn): Handle par_exec case.
	* sid-decode.scm (-gen-write-fn-name, -gen-write-fn-decls): New.
	(-gen-decode-insn-globals): Call them.
	(cgen-decode.h): Ditto.
	(-gen-idesc-decls): Declare writeback functions too.
	* sid.scm (<hw-register> save-index?): Handle non-scalars.
	(-op-gen-set-trace-parallel): Correct C++ tracing.
	
2000-09-08  Frank Ch. Eigler  <fche@redhat.com>

	* sid.scm (<operand> cxmake-get): Pass #:output-language to
	<derived-operand> op:getter.
	(-op-gen-set-trace): Ditto for op:getter.

2000-09-06  Frank Ch. Eigler  <fche@redhat.com>

	* sid-decode.scm (gen-record-args): Handle derived-operands.

2000-08-24  Frank Ch. Eigler  <fche@redhat.com>

	* sid.scm (-op-gen-set-trace): Support <derived-operand> lvalues.

2000-08-22  Catherine Moore  <clm@cygnus.com>
 
        * frv.opc (parse_d12): Support #gprel12 syntax.
        (parse_s12): Likewise.

2000-08-22  Frank Ch. Eigler  <fche@redhat.com>

	* sid-decode.scm (gen-sfmt-op-argbuf-defns): Add tracing.
	* sid.scm (hardware-base cxmake-get): Don't assert 'ifield type.
	(operand cxmake-get): Handle derived-operands (those with op:getter).
	(derived-operand cxmake-get): Remove.

2000-08-09  Ben Elliston  <bje@redhat.com>

	* sh.cpu: New file.
	* sh-media.cpu: Likewise.
	* sh-compact.cpu: Likewise.

2000-07-27  Dave Brolley  <brolley@redhat.com>

	* frv.cpu (f-hint-taken): New ifield.
	(f-hint-not-taken): New ifield.
	(hint-taken): New pmacro.
	(hint-not-taken): New pmacro.
	(bra): Use hint-taken.
	(bno): Use hint-not-taken.
	(fbra): Use hint-taken.
	(fbno): Use hint-not-taken.
	(bralr): Use hint-taken.
	(bnolr): Use hint-not-taken.
	(fbralr): Use hint-taken.
	(fbnolr): Use hint-not-taken.
	(bcralr): Use hint-taken.
	(bcnolr): Use hint-not-taken.
	(fcbralr): Use hint-taken.
	(fcbnolr): Use hint-not-taken.

2000-07-26  Dave Brolley  <brolley@redhat.com>

	* frv.cpu (cfcmps): Correct syntax.
	(nfdcmps): New insn.
	(cccr-names): Remove CRx.

2000-07-24  Dave Brolley  <brolley@redhat.com>

	* frv.opc (print_hi): Mark unused parameters with ATTRIBUTE_UNUSED.
	(print_lo): Mark unused parameters with ATTRIBUTE_UNUSED.
	* frv.cpu (saturate-unsigned): New pmacro.
	(msathu): Use saturate-unsigned.


Local Variables:
mode: change-log
left-margin: 8
fill-column: 74
version-control: never
change-log-default-name: "ChangeLog.RedHat"
End:
