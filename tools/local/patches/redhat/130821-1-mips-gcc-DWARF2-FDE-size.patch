This patch fixes problems for GDB (and readelf) computing the size of
addresses used in FDEs.  The MIPS port uses a mixture of 64-bit and
32-bit addresses and the normal methods for deducing address size do
not work.  The .gcc_compiled_longXX section tells GDB which address
size to use, but using TARGET_LONG64 does not match up with the DWARF2
information that is generated by GCC (controlled by DWARF2_ADDR_SIZE).

The patch has not been submitted upstream yet because it is not clear
if this change will have unintended side effects.  More investigation
is needed.

2013-08-21  Nick Clifton  <nickc@redhat.com>

	* config/mips/mips.c (mips_file_start): Compute the value of the
	.gcc_compiled_longXX section name from DWARF2_ADDR_SIZE.


Index: gcc/config/mips/mips.c
===================================================================
RCS file: /cvs/cvsfiles/gnupro/gcc/config/mips/mips.c,v
retrieving revision 1.69
diff -u -3 -p -r1.69 mips.c
--- gcc/config/mips/mips.c	15 Jul 2013 10:09:31 -0000	1.69
+++ gcc/config/mips/mips.c	21 Aug 2013 09:48:02 -0000
@@ -8729,7 +8729,7 @@ mips_file_start (void)
      -mlong64.  */
   if (mips_abi == ABI_EABI || mips_abi == ABI_O64)
     fprintf (asm_out_file, "\t.section .gcc_compiled_long%d\n"
-	     "\t.previous\n", TARGET_LONG64 ? 64 : 32);
+	     "\t.previous\n", (DWARF2_ADDR_SIZE * 8));
 
 #ifdef HAVE_AS_GNU_ATTRIBUTE
   {
