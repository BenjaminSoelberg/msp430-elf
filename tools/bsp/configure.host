# configure.host

# This shell script handles all host based configuration for bsp.
# It sets various shell variables based on the the host and the
# configuration options.  You can modify this shell script without
# needing to rerun autoconf.

# This shell script should be invoked as
#   . configure.host
# If it encounters an error, it will exit with a message.

# FIXME: This script is too complicated.  It does things in too many
# different ways.  This was taken from the old Cygnus configure script
# with only minor changes.  It should be cleaned up.

# FIXME: The general approach of picking and choosing which
# directories to configure, other than machine_dir and sys_dir, is
# potentially confusing.

# It uses the following shell variables:
#   host		The configuration host
#   host_cpu		The configuration host CPU

# It sets the following shell variables:
#   bsp_cflags		Special CFLAGS to use when building
#   archdir		Subdirectory containing architecture specific
#                       code and board directories.
#   arch_obj		Object file format.
#   board_list		List of boards to support.
#   hal_prefix		Where eCos hal is.
#

bsp_cflags=
archdir=
arch_obj=
board_list=
hal_prefix=


# Get the source directories to use for the CPU type.
# machine_dir should supply CPU dependent routines, such as setjmp.
# bsp_cflags is passed to gcc when compiling.
# THIS TABLE IS ALPHA SORTED.  KEEP IT THAT WAY.

case "${host}" in
  arm-*-elf*)
	archdir="arm";
	arch_obj="elf";
        board_list="armpid aeb-1 cma222";
	;;
  arm-*-coff*)
	archdir="arm";
	arch_obj="coff";
        board_list="armpid aeb-1 cma222";
	;;
  strongarm-*-elf*)
	archdir="arm";
	arch_obj="elf";
        board_list="sa1100dp sa-iop ebsa-285 sa1100mm sa1110as";
	;;
  strongarm-*-coff*)
	archdir="arm";
	arch_obj="coff";
        board_list="sa1100dp sa-iop ebsa-285 sa1100mm sa1110as";
	;;
  xscale-*-elf*)
	archdir="arm";
	arch_obj="elf";
        board_list="xaret iq80310";
	;;
  xscale-*-coff*)
	archdir="arm";
	arch_obj="coff";
        board_list="xaret iq80310";
	;;
  fr30-*-elf)
	archdir="fr30";
	arch_obj="elf";
        board_list="eval1";
	;;
  frv-*-elf)
	archdir="frv";
	arch_obj="elf";
        board_list="tiger tomcat sim";
	;;
  powerpc-*-eabi)
	archdir="ppc";
	arch_obj="eabi"
#        board_list="cma101 mbx evb403 yellowknife/yka yellowknife/ykb yellowknife/yklb";
#        board_list="mbx";
	;;
  mn10300-*-*)
	archdir="am30";
        board_list="eval1";
	;;
  mips*tx39*-elf)
	archdir="mips"
	arch_obj="elf";
	board_list="dve39 jmr3904"
	;;
  m68k-*-elf)
	archdir="m68k";
	arch_obj="elf";
#        board_list="328ads";
	;;
  m68k-*-coff)
	archdir="m68k";
	arch_obj="coff";
#        board_list="328ads";
	;;
  sparclite-*-elf)
	archdir="sparc";
	arch_obj="elf";
        board_list="mb8683x";
	;;
esac

